import { PreprocessorGroup } from "svelte/types/compiler/preprocess";
/**
 * Corresponds to the semantic heading element number
 * @example
 * <h1 /> --> 1
 * <h2 /> --> 2
 */
declare type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;
declare type Headings = Array<{
    id?: string;
    text: string;
    level: HeadingLevel;
}>;
interface CollectHeadingsOptions {
    /**
     * Specify the filename pattern to process
     * Defaults to files ending with ".svelte"
     * @default /\.(svelte)$/
     */
    test: RegExp;
    /**
     * Optional callback to transform the content after extracting all headings
     */
    afterCollect: (headings: Headings, content: string) => string;
}
export declare function collectHeadings(options?: Partial<CollectHeadingsOptions>): Pick<PreprocessorGroup, "markup">;
export {};
