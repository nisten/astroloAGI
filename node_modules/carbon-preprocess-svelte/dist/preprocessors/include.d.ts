import { PreprocessorGroup } from "svelte/types/compiler/preprocess";
interface PreprocessIncludeOptions {
    /**
     * Specify the filename pattern to process
     * Defaults to files ending with ".svelte"
     * @default /\.(svelte)$/
     */
    test?: RegExp;
    script: Array<{
        /**
         * Specify the content the prepend or append
         * @example
         * import { CodeSnippet } from "carbon-components-svelte";
         */
        content: string;
        /**
         * Specify the filename pattern to process
         * Defaults to files ending with ".svelte"
         * @default /\.(svelte)$/
         */
        test?: RegExp;
        /**
         * Specify whether the content should be prepended or appended
         * @default "prepend"
         */
        behavior?: "prepend" | "append";
    }>;
    markup: Array<{
        /**
         * Specify the content the prepend or append
         * @example
         * <ul>Table of Contents</ul>
         */
        content: string;
        /**
         * Specify the filename pattern to process
         * Defaults to files ending with ".svelte"
         * @default /\.(svelte)$/
         */
        test?: RegExp;
        /**
         * Specify whether the content should be prepended or appended
         * @default "prepend"
         */
        behavior?: "prepend" | "append";
    }>;
}
export declare function include(options?: Partial<PreprocessIncludeOptions>): Pick<PreprocessorGroup, "markup" | "script">;
export {};
